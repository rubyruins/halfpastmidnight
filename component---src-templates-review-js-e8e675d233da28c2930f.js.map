{"version":3,"file":"component---src-templates-review-js-e8e675d233da28c2930f.js","mappings":"8OAwBA,MApBiB,IAAa,IAAZ,KAACA,GAAK,EAEvB,OACC,sBAAIC,UAAU,aAEbD,EAAKE,MAAM,GAAI,GAAGC,KAAIC,GACrB,gBAAC,KAAI,CAACC,GAAE,SAAWC,IAAUF,GAAI,IAAKH,UAAU,MAAMM,IAAKH,GAC1D,qBAAGH,UAAU,oCAAoCG,EAAI,UAKvD,gBAAC,KAAI,CAACC,GAAE,SAAWC,IAAUN,EAAKQ,IAAI,IAAG,IAAKP,UAAU,MAAMM,IAAKP,EAAKQ,IAAI,IAC3E,qBAAGP,UAAU,oCAAoCD,EAAKQ,IAAI,KAGvD,E,UCqBP,MAR2B,IAA+C,IAA9C,WAACC,EAAU,2BAAEC,GAA2B,EACnE,OACC,gCAzBF,SAA2BD,EAAYC,GACtC,OAAKA,EAA2BC,OAI9B,gBAAC,IAAI,CAACC,MAAM,mBAEXF,EAA2BP,KAAIU,GAC9B,uBAAKZ,UAAU,WAAWM,IAAKM,EAAWC,KAAKC,OAAOC,cACrD,uBAAKf,UAAU,gCACd,gBAAC,KAAI,CAACI,GAAE,YAAcC,IAAUO,EAAWC,KAAKG,YAAYL,OAAUX,UAAU,wBAC9EY,EAAWC,KAAKC,OAAOC,cAEzB,qBAAGf,UAAU,kCAAkCY,EAAWC,KAAKG,YAAYC,aAXzE,gCAmBT,CAKIC,CAAkBV,EAAYC,GAC7B,E,UCrBL,MAbmB,IAA+B,IAA9B,UAACT,EAAS,YAAEgB,GAAY,EAE3C,MAAMG,GAAQC,EAAAA,EAAAA,GAASJ,EAAYK,aAEnC,OACC,uBAAKrB,UAAS,2CAA6CA,GAC1D,uBAAKA,UAAU,sBACf,gBAAC,EAAAsB,EAAW,CAACH,MAAOA,EAAOnB,UAAU,aAAauB,IAAKP,EAAYL,SAE9D,E,sCCuBO,SAASa,EAAS,GAAS,IAAT,KAACC,GAAK,EAEtC,MAAM,YAAET,EAAW,OAAEF,EAAM,KAAEY,GAASD,EAAKE,SAG3C,OACA,gBAAC,IAAM,CAACC,UAAWZ,EAAYL,OAC9B,uBAAKX,UAAU,8BACd,uBAAKA,UAAU,OACd,gBAAC,IAAO,KACP,gBAAC,EAAU,CAACgB,YAAaA,EAAahB,UAAU,6BAChD,uBAAKA,UAAU,eAEd,0BAAKgB,EAAYL,OAzBvB,SAA0BK,GAEzB,OAAIA,EAAYa,KAEd,0BAAKb,EAAYC,OAAO,MAAID,EAAYc,OAAO,MAAId,EAAYa,MAIhE,0BAAKb,EAAYC,OAEnB,CAgBOc,CAAiBf,GAElB,wBAAMhB,UAAU,4BACf,gBAAC,IAAe,CAACgC,KAAMC,EAAAA,IAAYC,KAAK,KAAKlC,UAAU,qBACvD,gBAAC,EAAQ,CAACD,KAAMiB,EAAYjB,OAC5B,2BACA,qBAAGC,UAAU,SACb,gBAAC,IAAe,CAACgC,KAAMG,EAAAA,IAASD,KAAK,KAAKlC,UAAU,sBAzCvCoC,EA0CDpB,EAAYoB,MAxC9BA,GADAA,EAAO,IAAIC,KAAKD,GAAME,eAAeC,MAAM,KAAKtC,MAAM,GAAGuC,KAAK,MAClDD,MAAM,MACb,GAAKH,EAAK,GAAK,IACbA,EAAKI,KAAK,MAuCX,gBAAC,IAAe,CAACR,KAAMS,EAAAA,IAAQP,KAAK,KAAKlC,UAAU,0BAClDc,EAAO4B,aAGT,sBAAI1C,UAAU,SAEd,uBAAKA,UAAU,iBAAiB2C,wBAAyB,CAAEC,OAAQlB,OAGrE,gBAAC,IAAO,KACP,gBAAC,EAAU,CAACV,YAAaA,EAAahB,UAAU,6BAChD,gBAAC,EAAkB,CAACS,2BAA4BgB,EAAKhB,2BAA2BoC,MAAOC,UAAW9B,EAAYK,kBAtDnH,IAAoBe,CA4DpB,CA9DAW,EAAAA,GAAAA,YAAoB,C","sources":["webpack://halfpastmidnight/./src/components/middle/taggroup.js","webpack://halfpastmidnight/./src/components/right/suggestedreadslist.js","webpack://halfpastmidnight/./src/components/right/coverimage.js","webpack://halfpastmidnight/./src/templates/review.js"],"sourcesContent":["import * as React from 'react'\nimport { Link } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\n\nconst TagGroup = ({tags}) => {\n\n\treturn (\n\t\t<ul className='tags-list'>\n\t\t{\n\t\t\ttags.slice(0, -1).map(tag => (\n\t\t\t\t<Link to={`/tags/${kebabCase(tag)}/`} className=\"tag\" key={tag}>\n\t\t\t\t\t<p className=\"d-inline-block text-primary mb-0\">{tag},&nbsp;&nbsp;</p>\n\t\t\t\t</Link>\n\t\t\t))\n\t\t}\n\t\t{\n\t\t\t<Link to={`/tags/${kebabCase(tags.at(-1))}/`} className=\"tag\" key={tags.at(-1)}>\n\t\t\t\t<p className=\"d-inline-block text-primary mb-0\">{tags.at(-1)}</p>\n\t\t\t</Link>\n\t\t}\n\t\t</ul>\n\t)\n}\n\nexport default TagGroup","import * as React from 'react'\nimport kebabCase from \"lodash/kebabCase\"\nimport { Link } from 'gatsby'\nimport Card from './card';\n\n// Fetch intersection of all books by the author and in the series\n// If the original book is in a series, this returns books in other series\n// If the original book is a standalones, this returns other standalones\n// Remove the original book from list of suggestions\n\nfunction renderSuggestions(bookAuthor, otherBooksInSeriesByAuthor) {\n\tif (!otherBooksInSeriesByAuthor.length) {\n\t\treturn <></>;\n\t} else {\n\t\treturn (\n\t\t\t<Card title=\"Suggested Reads\">\n\t\t\t{\n\t\t\t\totherBooksInSeriesByAuthor.map(suggestion => (\n\t\t\t\t\t<div className='row mx-0' key={suggestion.node.fields.articleTitle}>\n\t\t\t\t\t\t<div className='p-0 suggested-read-container'>\n\t\t\t\t\t\t\t<Link to={`/reviews/${kebabCase(suggestion.node.frontmatter.title)}`} className='suggested-read-title'> \n\t\t\t\t\t\t\t\t{suggestion.node.fields.articleTitle}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<p className='m-0 suggested-read-author mt-2'>{suggestion.node.frontmatter.author}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t}\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nconst SuggestedReadsList = ({bookAuthor, otherBooksInSeriesByAuthor}) => {\n\treturn (\n\t\t<>\n\t\t\t{renderSuggestions(bookAuthor, otherBooksInSeriesByAuthor)}\n\t\t</>\n\t)\n}\n\nexport default SuggestedReadsList","import * as React from 'react'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\n\nconst CoverImage = ({className, frontmatter}) => {\n\n\tconst image = getImage(frontmatter.cover_image)\n\n\treturn (\n\t\t<div className={`card mb-4 mx-0 p-0 review-img-container ${className}`}>\n\t\t\t<div className=\"card-body p-0 mx-0\">\n\t\t\t<GatsbyImage image={image} className=\"review-img\" alt={frontmatter.title}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CoverImage","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from '../components/layout'\nimport Content from '../components/middle/content'\nimport Sidebar from '../components/right/sidebar'\nimport TagGroup from \"../components/middle/taggroup\"\nimport SuggestedReadsList from \"../components/right/suggestedreadslist\"\nimport CoverImage from \"../components/right/coverimage\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock, faStar, faBookmark } from '@fortawesome/free-regular-svg-icons';\nimport { config } from \"@fortawesome/fontawesome-svg-core\"\nimport \"@fortawesome/fontawesome-svg-core/styles.css\"\n\nconfig.autoAddCss = false\n\nfunction formatDate(date) {\n\tdate = new Date(date).toDateString().split(' ').slice(1).join(' ');\n\tdate = date.split(' ');\n\tdate[1] = date[1] + ',';\n\tdate = date.join(' ');\n\treturn date;\n}\n\nfunction renderSeriesInfo(frontmatter) {\n\n\tif (frontmatter.part) {\n\t\treturn (\n\t\t\t<h3>{frontmatter.author} â€” {frontmatter.series}, #{frontmatter.part}</h3>\n\t\t)\n\t}\n\treturn (\n\t\t<h3>{frontmatter.author}</h3>\n\t)\n}\n\nexport default function Template({data}) {\n\n\tconst { frontmatter, fields, html } = data.bookData \n\n\n\treturn (\n\t<Layout pageTitle={frontmatter.title}>\n\t\t<div className=\"container layout-container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<Content>\n\t\t\t\t\t<CoverImage frontmatter={frontmatter} className=\"review-img-visible-small\"/>\n\t\t\t\t\t<div className=\"review-card\">\n\t\t\t\t\t\t{/* <p className=\"review-author pb-0\">{frontmatter.author}</p> */}\n\t\t\t\t\t\t<h1>{frontmatter.title}</h1>\n\t\t\t\t\t\t{renderSeriesInfo(frontmatter)}\n\t\t\t\t\t\t{/* {timeToRead} minute read */}\n\t\t\t\t\t\t<span className=\"review-publish-info mt-0\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faBookmark} size=\"1x\" className=\"pe-2 review-icon\"/>\n\t\t\t\t\t\t\t<TagGroup tags={frontmatter.tags}/>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<p className=\"mb-2\"></p>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faClock} size=\"1x\" className=\"pe-2 review-icon\"/>\n\t\t\t\t\t\t\t{formatDate(frontmatter.date)}\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faStar} size=\"1x\" className=\"pe-2 ps-2 review-icon\"/>\n\t\t\t\t\t\t\t{fields.roundRating}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{/* <a href={frontmatter.goodreads}>Goodreads</a> */}\n\t\t\t\t\t\t<hr className=\"my-4\"/>\n\t\t\t\t\t\t{/* <div className=\"my-4 divider\"></div> */}\n\t\t\t\t\t\t<div className=\"review-content\" dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</div>\n\t\t\t\t</Content>\n\t\t\t\t<Sidebar>\n\t\t\t\t\t<CoverImage frontmatter={frontmatter} className=\"review-img-visible-large\"/>\n\t\t\t\t\t<SuggestedReadsList otherBooksInSeriesByAuthor={data.otherBooksInSeriesByAuthor.edges} bookCover={frontmatter.cover_image}></SuggestedReadsList>\n\t\t\t\t</Sidebar>\n\t\t\t</div>\n\t\t</div>\n\t</Layout>\n  )\n}\n\nexport const pageQuery = graphql`\nquery($title: String!, $author: String!, $series: String!) {\n\tbookData: markdownRemark(\n\t\tfrontmatter: { title: { eq: $title } }\n\t) {\n\t\thtml\n\t\ttimeToRead\n\t\tfrontmatter {\n\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\tauthor\n\t\t\ttags\n\t\t\tseries\n\t\t\tpart\n\t\t\ttitle\n\t\t\trating\n\t\t\tblurb\n\t\t\tgoodreads\n\t\t\tcover_image {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tgatsbyImageData\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfields {\n\t\t\tarticleTitle\n\t\t\troundRating\n\t\t}\n\t}\n\totherBooksInSeriesByAuthor: allMarkdownRemark(\n\t\tfilter: {\n\t\t\tfrontmatter: {\n\t\t\t\tseries: {\n\t\t\t\t\teq: $series\n\t\t\t\t}\n\t\t\t\tauthor: {\n\t\t\t\t\teq: $author\n\t\t\t\t}\n\t\t\t\ttitle: { \n\t\t\t\t\tne: $title \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t) {\n\t\tedges {\n\t\t\tnode {\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\tauthor\n\t\t\t\t\tseries\n\t\t\t\t\tpart\n\t\t\t\t\tcover_image {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tgatsbyImageData\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfields {\n\t\t\t\t\tarticleTitle\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`\n"],"names":["tags","className","slice","map","tag","to","kebabCase","key","at","bookAuthor","otherBooksInSeriesByAuthor","length","title","suggestion","node","fields","articleTitle","frontmatter","author","renderSuggestions","image","getImage","cover_image","G","alt","Template","data","html","bookData","pageTitle","part","series","renderSeriesInfo","icon","faBookmark","size","faClock","date","Date","toDateString","split","join","faStar","roundRating","dangerouslySetInnerHTML","__html","edges","bookCover","config"],"sourceRoot":""}