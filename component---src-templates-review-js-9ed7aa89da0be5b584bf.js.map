{"version":3,"file":"component---src-templates-review-js-9ed7aa89da0be5b584bf.js","mappings":"8OA2BA,MAvBiB,IAAa,IAAZ,KAACA,GAAK,EAEvB,OACC,sBAAIC,UAAU,aAEbD,EAAKE,MAAM,GAAI,GAAGC,KAAIC,GACrB,gCACC,gBAAC,KAAI,CAACC,GAAE,SAAWC,IAAUF,GAAI,IAAKH,UAAU,OAC/C,qBAAGA,UAAU,oCAAoCG,IAElD,qBAAGH,UAAU,oCAAmC,UAKlD,gBAAC,KAAI,CAACI,GAAE,SAAWC,IAAUN,EAAKO,IAAI,IAAG,IAAKN,UAAU,OACvD,qBAAGA,UAAU,oCAAoCD,EAAKO,IAAI,KAGvD,E,UCkBP,MAR2B,IAA+C,IAA9C,WAACC,EAAU,2BAAEC,GAA2B,EACnE,OACC,gCAzBF,SAA2BD,EAAYC,GACtC,OAAKA,EAA2BC,OAI9B,gBAAC,IAAI,CAACC,MAAM,mBAEXF,EAA2BN,KAAIS,GAC9B,uBAAKX,UAAU,WAAWY,IAAKD,EAAWE,KAAKC,OAAOC,cACrD,uBAAKf,UAAU,gCACd,gBAAC,KAAI,CAACI,GAAE,YAAcC,IAAUM,EAAWE,KAAKG,YAAYN,OAAUV,UAAU,wBAC9EW,EAAWE,KAAKC,OAAOC,cAEzB,qBAAGf,UAAU,6BAA6BW,EAAWE,KAAKG,YAAYC,aAXpE,gCAmBT,CAKIC,CAAkBX,EAAYC,GAC7B,E,UCrBL,MAbmB,IAA+B,IAA9B,UAACR,EAAS,YAAEgB,GAAY,EAE3C,MAAMG,GAAQC,EAAAA,EAAAA,GAASJ,EAAYK,aAEnC,OACC,uBAAKrB,UAAS,2CAA6CA,GAC1D,uBAAKA,UAAU,sBACf,gBAAC,EAAAsB,EAAW,CAACH,MAAOA,EAAOnB,UAAU,gBAEhC,E,sCCYO,SAASuB,EAAS,GAAS,IAAT,KAACC,GAAK,EAEtC,MAAM,YAAER,EAAW,OAAEF,EAAM,KAAEW,GAASD,EAAKE,SAI3C,OACA,gBAAC,IAAM,CAACC,UAAWX,EAAYN,OAC9B,uBAAKV,UAAU,8BACd,uBAAKA,UAAU,OACd,gBAAC,IAAO,KACP,gBAAC,EAAU,CAACgB,YAAaA,EAAahB,UAAU,6BAChD,uBAAKA,UAAU,eACd,qBAAGA,UAAU,sBAAsBgB,EAAYC,QAC/C,0BAAKD,EAAYN,OAvBvB,SAA0BM,GAEzB,GAAIA,EAAYY,KACf,OACC,0BAAKZ,EAAYa,OAAO,MAAIb,EAAYY,KAG3C,CAiBOE,CAAiBd,GAElB,qBAAGhB,UAAU,uBACZ,gBAAC,IAAe,CAAC+B,KAAMC,EAAAA,IAASC,KAAK,KAAKjC,UAAU,qBACnDgB,EAAYkB,KACb,gBAAC,IAAe,CAACH,KAAMI,EAAAA,IAAQF,KAAK,KAAKjC,UAAU,0BAClDc,EAAOsB,YACR,2BACA,gBAAC,IAAe,CAACL,KAAMM,EAAAA,IAAYJ,KAAK,KAAKjC,UAAU,qBACvD,gBAAC,EAAQ,CAACD,KAAMiB,EAAYjB,QAG7B,sBAAIC,UAAU,SACd,uBAAKA,UAAU,iBAAiBsC,wBAAyB,CAAEC,OAAQd,OAGrE,gBAAC,IAAO,KACP,gBAAC,EAAU,CAACT,YAAaA,EAAahB,UAAU,6BAChD,gBAAC,EAAkB,CAACQ,2BAA4BgB,EAAKhB,2BAA2BgC,MAAOC,UAAWzB,EAAYK,iBAMnH,CAlDAqB,EAAAA,GAAAA,YAAoB,C","sources":["webpack://halfpastmidnight/./src/components/middle/taggroup.js","webpack://halfpastmidnight/./src/components/right/suggestedreadslist.js","webpack://halfpastmidnight/./src/components/right/coverimage.js","webpack://halfpastmidnight/./src/templates/review.js"],"sourcesContent":["import * as React from 'react'\nimport { Link } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\n\nconst TagGroup = ({tags}) => {\n\n\treturn (\n\t\t<ul className='tags-list'>\n\t\t{\n\t\t\ttags.slice(0, -1).map(tag => (\n\t\t\t\t<>\n\t\t\t\t\t<Link to={`/tags/${kebabCase(tag)}/`} className=\"tag\">\n\t\t\t\t\t\t<p className=\"d-inline-block text-primary mb-0\">{tag}</p>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<p className=\"d-inline-block text-primary mb-0\">,&nbsp;&nbsp;</p>\n\t\t\t\t</>\n\t\t\t))\n\t\t}\n\t\t{\n\t\t\t<Link to={`/tags/${kebabCase(tags.at(-1))}/`} className=\"tag\">\n\t\t\t\t<p className=\"d-inline-block text-primary mb-0\">{tags.at(-1)}</p>\n\t\t\t</Link>\n\t\t}\n\t\t</ul>\n\t)\n}\n\nexport default TagGroup","import * as React from 'react'\nimport kebabCase from \"lodash/kebabCase\"\nimport { Link } from 'gatsby'\nimport Card from './card';\n\n// Fetch intersection of all books by the author and in the series\n// If the original book is in a series, this returns books in other series\n// If the original book is a standalones, this returns other standalones\n// Remove the original book from list of suggestions\n\nfunction renderSuggestions(bookAuthor, otherBooksInSeriesByAuthor) {\n\tif (!otherBooksInSeriesByAuthor.length) {\n\t\treturn <></>;\n\t} else {\n\t\treturn (\n\t\t\t<Card title=\"Suggested Reads\">\n\t\t\t{\n\t\t\t\totherBooksInSeriesByAuthor.map(suggestion => (\n\t\t\t\t\t<div className='row mx-0' key={suggestion.node.fields.articleTitle}>\n\t\t\t\t\t\t<div className='p-0 suggested-read-container'>\n\t\t\t\t\t\t\t<Link to={`/reviews/${kebabCase(suggestion.node.frontmatter.title)}`} className='suggested-read-title'> \n\t\t\t\t\t\t\t\t{suggestion.node.fields.articleTitle}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<p className='m-0 suggested-read-author'>{suggestion.node.frontmatter.author}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t}\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nconst SuggestedReadsList = ({bookAuthor, otherBooksInSeriesByAuthor}) => {\n\treturn (\n\t\t<>\n\t\t\t{renderSuggestions(bookAuthor, otherBooksInSeriesByAuthor)}\n\t\t</>\n\t)\n}\n\nexport default SuggestedReadsList","import * as React from 'react'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\n\nconst CoverImage = ({className, frontmatter}) => {\n\n\tconst image = getImage(frontmatter.cover_image)\n\n\treturn (\n\t\t<div className={`card mb-4 mx-0 p-0 review-img-container ${className}`}>\n\t\t\t<div className=\"card-body p-0 mx-0\">\n\t\t\t<GatsbyImage image={image} className=\"review-img\"/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CoverImage","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from '../components/layout'\nimport Content from '../components/middle/content'\nimport Sidebar from '../components/right/sidebar'\nimport TagGroup from \"../components/middle/taggroup\"\nimport SuggestedReadsList from \"../components/right/suggestedreadslist\"\nimport CoverImage from \"../components/right/coverimage\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock, faStar, faBookmark } from '@fortawesome/free-regular-svg-icons';\nimport { config } from \"@fortawesome/fontawesome-svg-core\"\nimport \"@fortawesome/fontawesome-svg-core/styles.css\"\n\nconfig.autoAddCss = false\n\nfunction renderSeriesInfo(frontmatter) {\n\n\tif (frontmatter.part) {\n\t\treturn (\n\t\t\t<h3>{frontmatter.series}, #{frontmatter.part}</h3>\n\t\t)\n\t}\n}\n\nexport default function Template({data}) {\n\n\tconst { frontmatter, fields, html } = data.bookData \n\t// const { frontmatter, fields, html } = data.bookData \n\n\n\treturn (\n\t<Layout pageTitle={frontmatter.title}>\n\t\t<div className=\"container layout-container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<Content>\n\t\t\t\t\t<CoverImage frontmatter={frontmatter} className=\"review-img-visible-small\"/>\n\t\t\t\t\t<div className=\"review-card\">\n\t\t\t\t\t\t<p className=\"review-author pb-0\">{frontmatter.author}</p>\n\t\t\t\t\t\t<h1>{frontmatter.title}</h1>\n\t\t\t\t\t\t{renderSeriesInfo(frontmatter)}\n\t\t\t\t\t\t{/* {timeToRead} minute read */}\n\t\t\t\t\t\t<p className=\"review-publish-info\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faClock} size=\"1x\" className=\"pe-2 review-icon\"/>\n\t\t\t\t\t\t\t{frontmatter.date}\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faStar} size=\"1x\" className=\"pe-2 ps-2 review-icon\"/>\n\t\t\t\t\t\t\t{fields.roundRating}\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faBookmark} size=\"1x\" className=\"pe-2 review-icon\"/>\n\t\t\t\t\t\t\t<TagGroup tags={frontmatter.tags}/>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t{/* <a href={frontmatter.goodreads}>Goodreads</a> */}\n\t\t\t\t\t\t<hr className=\"my-4\"/>\n\t\t\t\t\t\t<div className=\"review-content\" dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</div>\n\t\t\t\t</Content>\n\t\t\t\t<Sidebar>\n\t\t\t\t\t<CoverImage frontmatter={frontmatter} className=\"review-img-visible-large\"/>\n\t\t\t\t\t<SuggestedReadsList otherBooksInSeriesByAuthor={data.otherBooksInSeriesByAuthor.edges} bookCover={frontmatter.cover_image}></SuggestedReadsList>\n\t\t\t\t</Sidebar>\n\t\t\t</div>\n\t\t</div>\n\t</Layout>\n  )\n}\n\nexport const pageQuery = graphql`\nquery($title: String!, $author: String!, $series: String!) {\n\tbookData: markdownRemark(\n\t\tfrontmatter: { title: { eq: $title } }\n\t) {\n\t\thtml\n\t\ttimeToRead\n\t\tfrontmatter {\n\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\tauthor\n\t\t\ttags\n\t\t\tseries\n\t\t\tpart\n\t\t\ttitle\n\t\t\trating\n\t\t\tblurb\n\t\t\tgoodreads\n\t\t\tcover_image {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tgatsbyImageData\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfields {\n\t\t\tarticleTitle\n\t\t\troundRating\n\t\t}\n\t}\n\totherBooksInSeriesByAuthor: allMarkdownRemark(\n\t\tfilter: {\n\t\t\tfrontmatter: {\n\t\t\t\tseries: {\n\t\t\t\t\teq: $series\n\t\t\t\t}\n\t\t\t\tauthor: {\n\t\t\t\t\teq: $author\n\t\t\t\t}\n\t\t\t\ttitle: { \n\t\t\t\t\tne: $title \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t) {\n\t\tedges {\n\t\t\tnode {\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\tauthor\n\t\t\t\t\tseries\n\t\t\t\t\tpart\n\t\t\t\t\tcover_image {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tgatsbyImageData\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfields {\n\t\t\t\t\tarticleTitle\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`\n"],"names":["tags","className","slice","map","tag","to","kebabCase","at","bookAuthor","otherBooksInSeriesByAuthor","length","title","suggestion","key","node","fields","articleTitle","frontmatter","author","renderSuggestions","image","getImage","cover_image","G","Template","data","html","bookData","pageTitle","part","series","renderSeriesInfo","icon","faClock","size","date","faStar","roundRating","faBookmark","dangerouslySetInnerHTML","__html","edges","bookCover","config"],"sourceRoot":""}