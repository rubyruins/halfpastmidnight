{"version":3,"file":"component---src-templates-review-js-7935bce05211726be75f.js","mappings":"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","sources":["webpack://halfpastmidnight/./src/components/middle/TagGroup.js","webpack://halfpastmidnight/./src/components/right/SuggestedReadsList.js","webpack://halfpastmidnight/./src/components/right/CoverImage.js","webpack://halfpastmidnight/./src/templates/review.js"],"sourcesContent":["import * as React from 'react';\nimport { Link } from \"gatsby\";\nimport kebabCase from \"lodash/kebabCase\";\n\nconst TagGroup = ({ tags }) => {\n\n\treturn (\n\t\t<ul className='tags-list'>\n\t\t{\n\t\t\ttags.slice(0, -1).map(tag => (\n\t\t\t\t<Link to={`/tags/${kebabCase(tag)}/`} className=\"tag\" key={tag}>\n\t\t\t\t\t<p className=\"d-inline-block text-primary mb-0\">{tag},&nbsp;&nbsp;</p>\n\t\t\t\t</Link>\n\t\t\t))\n\t\t}\n\t\t{\n\t\t\t<Link to={`/tags/${kebabCase(tags.at(-1))}/`} className=\"tag\" key={tags.at(-1)}>\n\t\t\t\t<p className=\"d-inline-block text-primary mb-0\">{tags.at(-1)}</p>\n\t\t\t</Link>\n\t\t}\n\t\t</ul>\n\t)\n}\n\nexport default TagGroup","import * as React from 'react';\nimport kebabCase from \"lodash/kebabCase\";\nimport { Link } from 'gatsby';\nimport Card from './Card';\n\n// Fetch intersection of all books by the author and in the series\n// If the original book is in a series, this returns books in other series\n// If the original book is a standalones, this returns other standalones\n// Remove the original book from list of suggestions\n\nfunction renderSuggestions(bookAuthor, otherBooksInSeriesByAuthor) {\n\tif (!otherBooksInSeriesByAuthor.length) {\n\t\treturn <></>;\n\t} else {\n\t\treturn (\n\t\t\t<Card title=\"Suggested Reads\">\n\t\t\t{\n\t\t\t\totherBooksInSeriesByAuthor.map(suggestion => (\n\t\t\t\t\t<div className='row mx-0' key={suggestion.node.fields.articleTitle}>\n\t\t\t\t\t\t<div className='p-0 suggested-read-container'>\n\t\t\t\t\t\t\t<Link to={`/reviews/${kebabCase(suggestion.node.frontmatter.title)}`} className='suggested-read-title'>\n\t\t\t\t\t\t\t\t{suggestion.node.fields.articleTitle}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<p className='m-0 suggested-read-author mt-2'>{suggestion.node.frontmatter.author}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t}\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nconst SuggestedReadsList = ({ bookAuthor, otherBooksInSeriesByAuthor }) => {\n\treturn (\n\t\t<>\n\t\t\t{renderSuggestions(bookAuthor, otherBooksInSeriesByAuthor)}\n\t\t</>\n\t)\n}\n\nexport default SuggestedReadsList","import * as React from 'react';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nconst CoverImage = ({ className, frontmatter }) => {\n\n\tconst image = getImage(frontmatter.cover_image)\n\n\treturn (\n\t\t<div className={`card mb-4 mx-0 p-0 review-img-container ${className}`}>\n\t\t\t<div className=\"card-body p-0 mx-0\">\n\t\t\t\t<GatsbyImage image={image} className=\"review-img\" alt={frontmatter.title} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CoverImage","import * as React from 'react';\nimport { graphql } from \"gatsby\";\nimport Layout from '../components/Layout';\nimport Content from '../components/middle/Content';\nimport Sidebar from '../components/right/SideBar';\nimport TagGroup from \"../components/middle/TagGroup\";\nimport SuggestedReadsList from \"../components/right/SuggestedReadsList\";\nimport CoverImage from \"../components/right/CoverImage\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock, faStar, faBookmark } from '@fortawesome/free-regular-svg-icons';\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\nimport \"@fortawesome/fontawesome-svg-core/styles.css\";\nimport SEO from \"../components/top/SEO\";\n\nconfig.autoAddCss = false\n\nfunction formatDate(date) {\n\tdate = new Date(date).toDateString().split(' ').slice(1).join(' ');\n\tdate = date.split(' ');\n\tdate[1] = date[1] + ',';\n\tdate = date.join(' ');\n\treturn date;\n}\n\nfunction renderSeriesInfo(frontmatter) {\n\n\tif (frontmatter.part) {\n\t\treturn (\n\t\t\t<h3>{frontmatter.author} â€” {frontmatter.series}, #{frontmatter.part}</h3>\n\t\t)\n\t}\n\treturn (\n\t\t<h3>{frontmatter.author}</h3>\n\t)\n}\n\nexport default function Template({data}) {\n\n\tconst { frontmatter, fields, html } = data.bookData \n\n\n\treturn (\n\t<Layout>\n\t\t<div className=\"container layout-container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<Content className={\"content-no-margin\"}>\n\t\t\t\t\t<CoverImage frontmatter={frontmatter} className=\"review-img-visible-small\"/>\n\t\t\t\t\t<div className=\"review-card\">\n\t\t\t\t\t\t{/* <p className=\"review-author pb-0\">{frontmatter.author}</p> */}\n\t\t\t\t\t\t<h1>{frontmatter.title}</h1>\n\t\t\t\t\t\t{renderSeriesInfo(frontmatter)}\n\t\t\t\t\t\t{/* {timeToRead} minute read */}\n\t\t\t\t\t\t<span className=\"review-publish-info mt-0\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faBookmark} size=\"1x\" className=\"pe-2 review-icon\"/>\n\t\t\t\t\t\t\t<TagGroup tags={frontmatter.tags}/>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<p className=\"mb-2\"></p>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faClock} size=\"1x\" className=\"pe-2 review-icon\"/>\n\t\t\t\t\t\t\t{formatDate(frontmatter.date)}\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faStar} size=\"1x\" className=\"pe-2 ps-2 review-icon\"/>\n\t\t\t\t\t\t\t{fields.roundRating}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{/* <a href={frontmatter.goodreads}>Goodreads</a> */}\n\t\t\t\t\t\t<hr className=\"my-4\"/>\n\t\t\t\t\t\t{/* <div className=\"my-4 divider\"></div> */}\n\t\t\t\t\t\t<div className=\"review-content\" dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</div>\n\t\t\t\t</Content>\n\t\t\t\t<Sidebar className={\"sidebar-no-margin\"}>\n\t\t\t\t\t<CoverImage frontmatter={frontmatter} className=\"review-img-visible-large\"/>\n\t\t\t\t\t<SuggestedReadsList otherBooksInSeriesByAuthor={data.otherBooksInSeriesByAuthor.edges} bookCover={frontmatter.cover_image}></SuggestedReadsList>\n\t\t\t\t</Sidebar>\n\t\t\t</div>\n\t\t</div>\n\t</Layout>\n  )\n}\n\nexport const Head = ({ data }) => {\n\treturn <SEO pageTitle = { data.bookData.frontmatter.title } />\n} \n\nexport const pageQuery = graphql`\nquery($title: String!, $author: String!, $series: String!) {\n\tbookData: markdownRemark(\n\t\tfrontmatter: { title: { eq: $title } }\n\t) {\n\t\thtml\n\t\ttimeToRead\n\t\tfrontmatter {\n\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\tauthor\n\t\t\ttags\n\t\t\tseries\n\t\t\tpart\n\t\t\ttitle\n\t\t\trating\n\t\t\tgoodreads\n\t\t\tcover_image {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tgatsbyImageData\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfields {\n\t\t\tarticleTitle\n\t\t\troundRating\n\t\t}\n\t}\n\totherBooksInSeriesByAuthor: allMarkdownRemark(\n\t\tfilter: {\n\t\t\tfrontmatter: {\n\t\t\t\tseries: {\n\t\t\t\t\teq: $series\n\t\t\t\t}\n\t\t\t\tauthor: {\n\t\t\t\t\teq: $author\n\t\t\t\t}\n\t\t\t\ttitle: { \n\t\t\t\t\tne: $title \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t) {\n\t\tedges {\n\t\t\tnode {\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\tauthor\n\t\t\t\t\tseries\n\t\t\t\t\tpart\n\t\t\t\t\tcover_image {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tgatsbyImageData\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfields {\n\t\t\t\t\tarticleTitle\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`\n"],"names":["tags","className","slice","map","tag","Link","to","kebabCase","key","at","bookAuthor","otherBooksInSeriesByAuthor","length","Card","title","suggestion","node","fields","articleTitle","frontmatter","author","renderSuggestions","image","getImage","cover_image","G","alt","Template","data","html","bookData","Layout","Content","part","series","renderSeriesInfo","icon","faBookmark","size","faClock","date","Date","toDateString","split","join","faStar","roundRating","dangerouslySetInnerHTML","__html","edges","bookCover","config","Head","SEO","pageTitle"],"sourceRoot":""}