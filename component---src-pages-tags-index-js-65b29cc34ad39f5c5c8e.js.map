{"version":3,"file":"component---src-pages-tags-index-js-65b29cc34ad39f5c5c8e.js","mappings":"2LAaA,MAXmB,IAAmB,IAAlB,SAAEA,GAAU,EAC5B,MAAOC,EAAYC,GAAiBC,EAAAA,UAAe,GAInD,OAHAA,EAAAA,WAAgB,KACZD,GAAc,EAAK,GACpB,IACED,EAGED,EAFI,IAEI,ECsCnB,MAnCeG,EAAAA,MAAW,KAsBzB,IAAIC,EA9BL,SAAwBC,GACvB,IAAIC,EAAYD,EAAKE,kBAAkBC,MACnCC,EAAcH,EAAUI,OAG5B,OADkBJ,EADKK,KAAKC,MAAMD,KAAKE,SAAWJ,GAGnD,CAwBqBK,EApBPC,EAAAA,EAAAA,gBAAe,eAqBxBC,GAAgBC,EAAAA,EAAAA,GAASb,EAAcc,YAAYC,aACnDC,EAAYhB,EAAcc,YAAYG,KAAO,KAAOjB,EAAcc,YAAYI,YAElF,OACC,gBAAC,EAAU,KACV,uBAAKC,UAAU,4DACd,gBAAC,EAAAC,EAAW,CAACC,MAAOT,EAAeO,UAAU,eAAeG,IAAKN,EAAWO,MAAOP,KAExE,G,gHCMf,UA1CoB,IAAe,IAAd,KAAEf,GAAM,EAE3B,OACD,gBAAC,IAAM,CAACuB,UAAU,YACjB,uBAAKL,UAAU,8BACd,uBAAKA,UAAU,OACd,gBAAC,IAAM,MACP,gBAAC,IAAO,KACP,uBAAKA,UAAU,eACf,0BAAI,YACJ,sBAAIA,UAAU,SAEblB,EAAKE,kBAAkBsB,MAAMC,KAAIC,GACjC,sBAAIC,IAAKD,EAAKE,IACb,+BACC,gBAAC,EAAAC,KAAI,CAACC,GAAE,SAAWC,IAAUL,EAAKM,MAASN,EAAKM,IAAI,KAAGN,EAAKO,WAAW,WAO3E,gBAAC,IAAO,QAGF,C","sources":["webpack://halfpastmidnight/./src/components/top/clientonly.js","webpack://halfpastmidnight/./src/components/top/header.js","webpack://halfpastmidnight/./src/pages/tags/index.js"],"sourcesContent":["import React from 'react'\n\nconst ClientOnly = ({ children }) => {\n    const [hasMounted, setHasMounted] = React.useState(false);\n    React.useEffect(() => {\n        setHasMounted(true);\n    }, []);\n    if (!hasMounted) {\n        return null;\n    }\n    return children;\n}\n\nexport default ClientOnly;","import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport ClientOnly from './clientonly';\n\nfunction getRandomImage(data) {\n\tlet allImages = data.allMarkdownRemark.nodes\n\tlet totalImages = allImages.length;\n\tlet randomImageIndex = Math.floor(Math.random() * totalImages);\n\tlet randomImage = allImages[randomImageIndex];\n\treturn randomImage;\n}\n\nconst Header = React.memo(() => {\n\t\t\n\tconst data = useStaticQuery(graphql`\n\t\tquery {\n\t\t\tallMarkdownRemark (\n\t\t\t\tfilter: {fields: {collection: {eq: \"headers\"}}}\n\t\t\t\t) {\n\t\t\t\tnodes {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tcontributor\n\t\t\t\t\t\tcover_image {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tgatsbyImageData\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`)\n\t\n\tlet selectedImage = getRandomImage(data);\n\tlet renderedImage = getImage(selectedImage.frontmatter.cover_image);\n\tlet imageInfo = selectedImage.frontmatter.name + \"\\n\" + selectedImage.frontmatter.contributor;\n\n\treturn (\n\t\t<ClientOnly>\n\t\t\t<div className='header-container col-xl-12 col-lg-12 col-md-12 col-sm-12'>\n\t\t\t\t<GatsbyImage image={renderedImage} className=\"header-image\" alt={imageInfo} title={imageInfo}/>\n\t\t\t</div>\n\t\t</ClientOnly>\n\t)\n})\n\nexport default Header","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport kebabCase from \"lodash/kebabCase\"\nimport Layout from '../../components/layout'\nimport Content from '../../components/middle/content'\nimport Sidebar from '../../components/right/sidebar'\nimport Header from '../../components/top/header'\n\nconst AllTagsPage = ({ data }) => {\n\t\n  return (\n\t<Layout pageTitle=\"All Tags\">\n\t\t<div className=\"container layout-container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<Header/>\n\t\t\t\t<Content>\n\t\t\t\t\t<div className=\"review-card\">\n\t\t\t\t\t<h1>All Tags</h1>\n\t\t\t\t\t<hr className=\"my-4\"/>\n\t\t\t\t\t{\n\t\t\t\t\t\tdata.allMarkdownRemark.group.map(node => (\n\t\t\t\t\t\t<h4 key={node.id}>\n\t\t\t\t\t\t\t<article>\n\t\t\t\t\t\t\t\t<Link to={`/tags/${kebabCase(node.tag)}`}>{node.tag} ({node.totalCount})</Link>\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</Content>\n\t\t\t\t<Sidebar/>\n\t\t\t</div>\n\t\t</div>\n\t</Layout>\n  )\n}\n\nexport const query = graphql`\nquery {\n\tallMarkdownRemark (\n\t\tfilter: {fields: {collection: {eq: \"reviews\"}}}\n\t) {\n\t\tgroup(field: {frontmatter: {tags: SELECT}}) {\n\t\ttag: fieldValue\n\t\ttotalCount\n\t  \t}\n\t}\n}\n`\n\nexport default AllTagsPage"],"names":["children","hasMounted","setHasMounted","React","selectedImage","data","allImages","allMarkdownRemark","nodes","totalImages","length","Math","floor","random","getRandomImage","useStaticQuery","renderedImage","getImage","frontmatter","cover_image","imageInfo","name","contributor","className","G","image","alt","title","pageTitle","group","map","node","key","id","Link","to","kebabCase","tag","totalCount"],"sourceRoot":""}